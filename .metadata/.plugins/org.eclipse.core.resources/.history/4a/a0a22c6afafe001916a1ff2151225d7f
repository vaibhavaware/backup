package com.ivl.moviecatalogservice.resources;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import resources.MovieCatalogService.models.Rating;

@RestController
@RequestMapping("/catalogs")
public class MovieCatlogController {

	@Autowired
	private RestTemplate restTemplate;

	@RequestMapping("/{user}")
	public String getCatalog(@PathVariable("user") String user) {


		
		ResponseEntity<List<Rating>> rateResponse =restTemplate.exchange("http://localhost:8083/movieratings", HttpMethod.GET, null, new ParameterizedTypeReference<List<Rating>>() {
		            });
		List<Rating> ratings = rateResponse.getBody();
		
		Rating[] ratingList = restTemplate.getForObject("http://localhost:8083/movieratings", Rating[].class);
		ratings = Arrays.asList(ratingList);
		/*
		 * for (Rating rat : ratings) { System.out.println("************************** "
		 * + rat.getMovieId()); }
		 */


		
		  return ratings.stream().map(rating -> {
		  
		  Movie movie = restTemplate.getForObject("http://movie-info-service/movies/" +
		  rating.getMovieId(), Movie.class);
		  
		  Movie movie =
		  restTemplate.getForObject("http://localhost:8762/movie-info-service/movies/"+
		  rating.getMovieId(), Movie.class); return new
		  CatalogItem(movie.getMovieName(), "test", rating.getRating());
		  }).collect(Collectors.toList());
		 
return ratingList.toString();
	}

}
